[["manipulation-avancée-mettre-en-forme-vos-données.html", "Chapter 7 Manipulation avancée (mettre en forme vos données) 7.1 Transformation de plusieurs variables 7.2 Opérateurs et case_when 7.3 Réutilisation de statistiques 7.4 Chargement", " Chapter 7 Manipulation avancée (mettre en forme vos données) Le but de cette partie qui ne sera pas très longue sur le papier mais beaucoup plus à l’apprentissage est de vous montrer comment automatiser les choses. Pour prendre un exemple qui nous est familier, transformer en facteur ou en variable ordinale des items de plusieurs échelles. Sous SPSS ou sous R, c’est pénible si vous n’utilisez pas les macros pour SPSS ou la programmation sous R. On peut automatiser beaucoup de choses sous R. Il y a des paquets sous R qui permettent d’analyser des modèles structuraux ou faire des pages web interactives. Sans aller jusque là, on peut se rendre la vie plus facile. 7.1 Transformation de plusieurs variables On va charger le fichier de données en ligne : file.name &lt;- &quot;https://personality-project.org/r/psych/HowTo/scoring.tutorial/small.msq.txt&quot; msq &lt;- read_table(file.name) ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## `&quot;active&quot;` = col_double(), ## `&quot;alert&quot;` = col_double(), ## `&quot;aroused&quot;` = col_double(), ## `&quot;sleepy&quot;` = col_double(), ## `&quot;tired&quot;` = col_double(), ## `&quot;drowsy&quot;` = col_double(), ## `&quot;anxious&quot;` = col_double(), ## `&quot;jittery&quot;` = col_double(), ## `&quot;nervous&quot;` = col_double(), ## `&quot;calm&quot;` = col_double(), ## `&quot;relaxed&quot;` = col_double(), ## `&quot;at.ease&quot;` = col_double(), ## `&quot;gender&quot;` = col_double(), ## `&quot;drug&quot;` = col_double() ## ) Oui au passage on peut lire des fichiers de données directement en ligne. Dans ce cas, on a utilisé la commande read_table du package readr, car le séparateur de champs est l’espace. str(msq) ## spc_tbl_ [200 × 14] (S3: spec_tbl_df/tbl_df/tbl/data.frame) ## $ &quot;active&quot; : num [1:200] 2 1 1 1 1 3 1 0 3 1 ... ## $ &quot;alert&quot; : num [1:200] 2 1 1 2 2 3 1 1 3 1 ... ## $ &quot;aroused&quot;: num [1:200] 0 0 1 0 1 2 0 0 3 0 ... ## $ &quot;sleepy&quot; : num [1:200] 0 2 3 1 1 0 2 1 0 1 ... ## $ &quot;tired&quot; : num [1:200] 1 2 3 1 1 0 2 1 0 1 ... ## $ &quot;drowsy&quot; : num [1:200] 1 2 2 0 0 0 3 1 0 1 ... ## $ &quot;anxious&quot;: num [1:200] 1 1 2 0 0 1 0 0 3 0 ... ## $ &quot;jittery&quot;: num [1:200] 1 0 0 0 1 0 0 0 3 0 ... ## $ &quot;nervous&quot;: num [1:200] 0 1 1 0 0 0 0 0 1 0 ... ## $ &quot;calm&quot; : num [1:200] 2 2 2 2 3 2 1 3 0 1 ... ## $ &quot;relaxed&quot;: num [1:200] 2 2 2 2 2 3 2 2 0 2 ... ## $ &quot;at.ease&quot;: num [1:200] 2 2 2 2 3 3 1 2 0 2 ... ## $ &quot;gender&quot; : num [1:200] 2 2 1 2 1 1 2 2 1 1 ... ## $ &quot;drug&quot; : num [1:200] 2 1 1 2 1 2 2 1 2 1 ... ## - attr(*, &quot;spec&quot;)= ## .. cols( ## .. `&quot;active&quot;` = col_double(), ## .. `&quot;alert&quot;` = col_double(), ## .. `&quot;aroused&quot;` = col_double(), ## .. `&quot;sleepy&quot;` = col_double(), ## .. `&quot;tired&quot;` = col_double(), ## .. `&quot;drowsy&quot;` = col_double(), ## .. `&quot;anxious&quot;` = col_double(), ## .. `&quot;jittery&quot;` = col_double(), ## .. `&quot;nervous&quot;` = col_double(), ## .. `&quot;calm&quot;` = col_double(), ## .. `&quot;relaxed&quot;` = col_double(), ## .. `&quot;at.ease&quot;` = col_double(), ## .. `&quot;gender&quot;` = col_double(), ## .. `&quot;drug&quot;` = col_double() ## .. ) On voit que les guillemets ont été importés et parasite la ligne des noms de colonnes. Pour ça on utilise gsub, une fonction qui remplace les caractéères dans le premier argument par les caractères dans le deuxième. Le troisième argument est vecteur dans lequel on veut remplacer le texte. Ici on va remplacer un guillemet double, partout, par aucun caractère. Et on applique ça aux noms de variables de msq, ce qui nous donne : colnames(msq) &lt;- gsub(&#39;&quot;&#39;,&#39;&#39;,colnames(msq),fixed=T) msq ## # A tibble: 200 × 14 ## active alert aroused sleepy tired drowsy anxious jittery nervous calm ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2 2 0 0 1 1 1 1 0 2 ## 2 1 1 0 2 2 2 1 0 1 2 ## 3 1 1 1 3 3 2 2 0 1 2 ## 4 1 2 0 1 1 0 0 0 0 2 ## 5 1 2 1 1 1 0 0 1 0 3 ## 6 3 3 2 0 0 0 1 0 0 2 ## 7 1 1 0 2 2 3 0 0 0 1 ## 8 0 1 0 1 1 1 0 0 0 3 ## 9 3 3 3 0 0 0 3 3 1 0 ## 10 1 1 0 1 1 1 0 0 0 1 ## # ℹ 190 more rows ## # ℹ 4 more variables: relaxed &lt;dbl&gt;, at.ease &lt;dbl&gt;, gender &lt;dbl&gt;, drug &lt;dbl&gt; Les commentaires de read.table indique que les colonnes sont toutes des nombres réels de double précision. C’est très bien pour les analyses psychométriques primaires avec psych mais pas avec lavaan qui réclame des facteurs. On va utiliser la machine à automatiser mutate_at qui permet d’appliquer une transformation sur une série de variable. Dans le premier argument, on mets vars() et à l’intérieur quelque chose pour définir une ou des variables comme avec un select. Le deuxième argument est la fonction à appliquer et après les arguments optionnels. msq_fact &lt;- msq msq_fact &lt;- msq_fact %&gt;% mutate(across(active:at.ease,~ factor(.x,ordered=T))) Pour être vraiment propre, on spécifierait les niveaux : msq_fact &lt;- msq_fact %&gt;% mutate(across(active:at.ease, ~ factor(.x,levels=c(0,1,2,3),ordered=T))) str(msq_fact) ## tibble [200 × 14] (S3: tbl_df/tbl/data.frame) ## $ active : Ord.factor w/ 4 levels &quot;0&quot;&lt;&quot;1&quot;&lt;&quot;2&quot;&lt;&quot;3&quot;: 3 2 2 2 2 4 2 1 4 2 ... ## $ alert : Ord.factor w/ 4 levels &quot;0&quot;&lt;&quot;1&quot;&lt;&quot;2&quot;&lt;&quot;3&quot;: 3 2 2 3 3 4 2 2 4 2 ... ## $ aroused: Ord.factor w/ 4 levels &quot;0&quot;&lt;&quot;1&quot;&lt;&quot;2&quot;&lt;&quot;3&quot;: 1 1 2 1 2 3 1 1 4 1 ... ## $ sleepy : Ord.factor w/ 4 levels &quot;0&quot;&lt;&quot;1&quot;&lt;&quot;2&quot;&lt;&quot;3&quot;: 1 3 4 2 2 1 3 2 1 2 ... ## $ tired : Ord.factor w/ 4 levels &quot;0&quot;&lt;&quot;1&quot;&lt;&quot;2&quot;&lt;&quot;3&quot;: 2 3 4 2 2 1 3 2 1 2 ... ## $ drowsy : Ord.factor w/ 4 levels &quot;0&quot;&lt;&quot;1&quot;&lt;&quot;2&quot;&lt;&quot;3&quot;: 2 3 3 1 1 1 4 2 1 2 ... ## $ anxious: Ord.factor w/ 4 levels &quot;0&quot;&lt;&quot;1&quot;&lt;&quot;2&quot;&lt;&quot;3&quot;: 2 2 3 1 1 2 1 1 4 1 ... ## $ jittery: Ord.factor w/ 4 levels &quot;0&quot;&lt;&quot;1&quot;&lt;&quot;2&quot;&lt;&quot;3&quot;: 2 1 1 1 2 1 1 1 4 1 ... ## $ nervous: Ord.factor w/ 4 levels &quot;0&quot;&lt;&quot;1&quot;&lt;&quot;2&quot;&lt;&quot;3&quot;: 1 2 2 1 1 1 1 1 2 1 ... ## $ calm : Ord.factor w/ 4 levels &quot;0&quot;&lt;&quot;1&quot;&lt;&quot;2&quot;&lt;&quot;3&quot;: 3 3 3 3 4 3 2 4 1 2 ... ## $ relaxed: Ord.factor w/ 4 levels &quot;0&quot;&lt;&quot;1&quot;&lt;&quot;2&quot;&lt;&quot;3&quot;: 3 3 3 3 3 4 3 3 1 3 ... ## $ at.ease: Ord.factor w/ 4 levels &quot;0&quot;&lt;&quot;1&quot;&lt;&quot;2&quot;&lt;&quot;3&quot;: 3 3 3 3 4 4 2 3 1 3 ... ## $ gender : num [1:200] 2 2 1 2 1 1 2 2 1 1 ... ## $ drug : num [1:200] 2 1 1 2 1 2 2 1 2 1 ... Il y a des variantes à mutate_at comme mutate_if. Par exemple, pour centrer/réduire les variables numériques : iris &lt;- iris %&gt;% mutate(across(where(is.numeric),scale)) Si la variable est numérique alors R va centrer/réduire la variable. Donc pas de problème avec Species qui est un facteur : str(iris) ## &#39;data.frame&#39;: 150 obs. of 5 variables: ## $ Sepal.Length: num [1:150, 1] -0.898 -1.139 -1.381 -1.501 -1.018 ... ## ..- attr(*, &quot;scaled:center&quot;)= num 5.84 ## ..- attr(*, &quot;scaled:scale&quot;)= num 0.828 ## $ Sepal.Width : num [1:150, 1] 1.0156 -0.1315 0.3273 0.0979 1.245 ... ## ..- attr(*, &quot;scaled:center&quot;)= num 3.06 ## ..- attr(*, &quot;scaled:scale&quot;)= num 0.436 ## $ Petal.Length: num [1:150, 1] -1.34 -1.34 -1.39 -1.28 -1.34 ... ## ..- attr(*, &quot;scaled:center&quot;)= num 3.76 ## ..- attr(*, &quot;scaled:scale&quot;)= num 1.77 ## $ Petal.Width : num [1:150, 1] -1.31 -1.31 -1.31 -1.31 -1.31 ... ## ..- attr(*, &quot;scaled:center&quot;)= num 1.2 ## ..- attr(*, &quot;scaled:scale&quot;)= num 0.762 ## $ Species : Factor w/ 3 levels &quot;setosa&quot;,&quot;versicolor&quot;,..: 1 1 1 1 1 1 1 1 1 1 ... Soit : iris %&gt;% tbl_summary(statistic = list( all_continuous() ~ &quot;{mean} ({sd})&quot;),type = c(Sepal.Length:Petal.Width) ~ &quot;continuous&quot;) #ytprfduqlu table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #ytprfduqlu thead, #ytprfduqlu tbody, #ytprfduqlu tfoot, #ytprfduqlu tr, #ytprfduqlu td, #ytprfduqlu th { border-style: none; } #ytprfduqlu p { margin: 0; padding: 0; } #ytprfduqlu .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ytprfduqlu .gt_caption { padding-top: 4px; padding-bottom: 4px; } #ytprfduqlu .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ytprfduqlu .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #ytprfduqlu .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ytprfduqlu .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ytprfduqlu .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ytprfduqlu .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ytprfduqlu .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ytprfduqlu .gt_column_spanner_outer:first-child { padding-left: 0; } #ytprfduqlu .gt_column_spanner_outer:last-child { padding-right: 0; } #ytprfduqlu .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ytprfduqlu .gt_spanner_row { border-bottom-style: hidden; } #ytprfduqlu .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #ytprfduqlu .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ytprfduqlu .gt_from_md > :first-child { margin-top: 0; } #ytprfduqlu .gt_from_md > :last-child { margin-bottom: 0; } #ytprfduqlu .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ytprfduqlu .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #ytprfduqlu .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #ytprfduqlu .gt_row_group_first td { border-top-width: 2px; } #ytprfduqlu .gt_row_group_first th { border-top-width: 2px; } #ytprfduqlu .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ytprfduqlu .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #ytprfduqlu .gt_first_summary_row.thick { border-top-width: 2px; } #ytprfduqlu .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ytprfduqlu .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ytprfduqlu .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ytprfduqlu .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #ytprfduqlu .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ytprfduqlu .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ytprfduqlu .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ytprfduqlu .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #ytprfduqlu .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ytprfduqlu .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #ytprfduqlu .gt_left { text-align: left; } #ytprfduqlu .gt_center { text-align: center; } #ytprfduqlu .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ytprfduqlu .gt_font_normal { font-weight: normal; } #ytprfduqlu .gt_font_bold { font-weight: bold; } #ytprfduqlu .gt_font_italic { font-style: italic; } #ytprfduqlu .gt_super { font-size: 65%; } #ytprfduqlu .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #ytprfduqlu .gt_asterisk { font-size: 100%; vertical-align: 0; } #ytprfduqlu .gt_indent_1 { text-indent: 5px; } #ytprfduqlu .gt_indent_2 { text-indent: 10px; } #ytprfduqlu .gt_indent_3 { text-indent: 15px; } #ytprfduqlu .gt_indent_4 { text-indent: 20px; } #ytprfduqlu .gt_indent_5 { text-indent: 25px; } Characteristic N = 1501 Sepal.Length 0.00 (1.00) Sepal.Width 0.00 (1.00) Petal.Length 0.00 (1.00) Petal.Width 0.00 (1.00) Species     setosa 50 (33%)     versicolor 50 (33%)     virginica 50 (33%) 1 Mean (SD); n (%) 7.2 Opérateurs et case_when On appelle opérateur des mots-clefs généralement symbolique comme les +,/,==, etc. Par exemple de très utile, il y a l’opérateur %in%. Il prends un vecteur à gauche et un vecteur à droite. Dans le cas simple, avec un élement dans un vecteur à gauche, il renvoie vrai si l’élement à gauche est présent dans le vecteur de droite : 3 %in% 1:5 ## [1] TRUE -1 %in% 1:5 ## [1] FALSE Quand il y a plusieurs élements à gauche, l’opérateur renvoie une réponse pour chaque élement à gauche : c(1,3) %in% 1:5 ## [1] TRUE TRUE c(-1,3) %in% 1:5 ## [1] FALSE TRUE Si on veut transformer msq en items dichotomiques, c’est-à-dire coder 0 ou 1 en 0 et 2 et 3 en 1. Alors ça devient facile. En fait il y a deux façons de l’écrire. la première est old school. On utilise la fonction ifelse pour renvoyer 0 ou 1 selon la réponse : Pour comprendre ifelse un exemple : ifelse(c(TRUE,FALSE,TRUE,FALSE,FALSE),1,0) ## [1] 1 0 1 0 0 ifelse renvoie 1 quand c’est vrai et 0 quand c’est faux. Ce qui nous donne associé à notre nouvel opérateur: active &lt;- ifelse(msq$active %in% c(2,3),1,0) table(active) ## active ## 0 1 ## 156 44 C’est un peu brutal car on ne précise pas explicitement ce que va prendre les valeurs 0 et 1. En plus élégant, il y a une variante à privilégier avec le tidyverse: msq2 &lt;- msq %&gt;% mutate(active=case_when( active %in% c(0,1) ~ 0, active %in% c(2,3) ~ 1, .default = NA )) table(msq2$active) ## ## 0 1 ## 156 44 Mais là, on ne fait qu’un variable à la fois, il faudrait appliquer une fonction pour avoir le résultat sur toutes les variables. Une fonction se définit par un corps de fonction, des arguments et un nom. ma.fonction &lt;- function(x) { return(x) } Ce qui donne : ma.fonction(1) ## [1] 1 Ce qui est en dernière ligne ou bien (c’est mieux) ce qui est indiqué entre parenthèses pour la fonction return est renvoyée. Donc notre fonction devient : dichotomiser &lt;- function(x) { resultat &lt;- case_when( x %in% c(0,1) ~ 0, x %in% c(2,3) ~ 1, .default = NA ) return(resultat) } table(dichotomiser(msq$active)) ## ## 0 1 ## 156 44 Pour l’appliquer, il faut se rappeler de mutate_at: msq2 &lt;- msq %&gt;% mutate(across(active:at.ease,dichotomiser)) Ce qui donne bien : tbl_summary(msq2) #wmtvisbbhh table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #wmtvisbbhh thead, #wmtvisbbhh tbody, #wmtvisbbhh tfoot, #wmtvisbbhh tr, #wmtvisbbhh td, #wmtvisbbhh th { border-style: none; } #wmtvisbbhh p { margin: 0; padding: 0; } #wmtvisbbhh .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #wmtvisbbhh .gt_caption { padding-top: 4px; padding-bottom: 4px; } #wmtvisbbhh .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #wmtvisbbhh .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #wmtvisbbhh .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #wmtvisbbhh .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #wmtvisbbhh .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #wmtvisbbhh .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #wmtvisbbhh .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #wmtvisbbhh .gt_column_spanner_outer:first-child { padding-left: 0; } #wmtvisbbhh .gt_column_spanner_outer:last-child { padding-right: 0; } #wmtvisbbhh .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #wmtvisbbhh .gt_spanner_row { border-bottom-style: hidden; } #wmtvisbbhh .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #wmtvisbbhh .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #wmtvisbbhh .gt_from_md > :first-child { margin-top: 0; } #wmtvisbbhh .gt_from_md > :last-child { margin-bottom: 0; } #wmtvisbbhh .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #wmtvisbbhh .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #wmtvisbbhh .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #wmtvisbbhh .gt_row_group_first td { border-top-width: 2px; } #wmtvisbbhh .gt_row_group_first th { border-top-width: 2px; } #wmtvisbbhh .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #wmtvisbbhh .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #wmtvisbbhh .gt_first_summary_row.thick { border-top-width: 2px; } #wmtvisbbhh .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #wmtvisbbhh .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #wmtvisbbhh .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #wmtvisbbhh .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #wmtvisbbhh .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #wmtvisbbhh .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #wmtvisbbhh .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #wmtvisbbhh .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #wmtvisbbhh .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #wmtvisbbhh .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #wmtvisbbhh .gt_left { text-align: left; } #wmtvisbbhh .gt_center { text-align: center; } #wmtvisbbhh .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #wmtvisbbhh .gt_font_normal { font-weight: normal; } #wmtvisbbhh .gt_font_bold { font-weight: bold; } #wmtvisbbhh .gt_font_italic { font-style: italic; } #wmtvisbbhh .gt_super { font-size: 65%; } #wmtvisbbhh .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #wmtvisbbhh .gt_asterisk { font-size: 100%; vertical-align: 0; } #wmtvisbbhh .gt_indent_1 { text-indent: 5px; } #wmtvisbbhh .gt_indent_2 { text-indent: 10px; } #wmtvisbbhh .gt_indent_3 { text-indent: 15px; } #wmtvisbbhh .gt_indent_4 { text-indent: 20px; } #wmtvisbbhh .gt_indent_5 { text-indent: 25px; } Characteristic N = 2001 active 44 (22%) alert 49 (25%)     Unknown 1 aroused 24 (12%) sleepy 101 (51%)     Unknown 2 tired 123 (62%) drowsy 98 (49%) anxious 26 (13%) jittery 31 (16%) nervous 20 (10%) calm 106 (53%) relaxed 119 (60%)     Unknown 1 at.ease 91 (46%)     Unknown 2 gender     1 62 (46%)     2 74 (54%)     Unknown 64 drug     1 68 (50%)     2 68 (50%)     Unknown 64 1 n (%) 7.3 Réutilisation de statistiques Contrairement aux autres logiciels, les résultats statistiques sont la plupart du temps réutilisable par l’utilisateur. Par exemple, sous Jamovi, il faut créer des variables à la main pour créer des variables avec les quantiles. Pour créer ces variables sous R, c’est beaucoup plus simple, il n’y a pas besoin de faire de tests (if): quantile(iris$Sepal.Length) ## 0% 25% 50% 75% 100% ## -1.86378030 -0.89767388 -0.05233076 0.67224905 2.48369858 La fonction quantile nous renvoie les quartiles sous la forme d’un vecteur qu’il suffit de combiner avec une autre fonction cut. Cette dernière crée des variables facteurs à partir d’une variable quantitative et de points de césure. Les points de césure sont fournis par la fonction quantile, par conséquent : table(cut(iris$Sepal.Length, breaks=quantile(iris$Sepal.Length))) ## ## (-1.86,-0.898] (-0.898,-0.0523] (-0.0523,0.672] (0.672,2.48] ## 40 39 35 35 Pour généraliser : quartiles &lt;- function(x) { cut(x, breaks=quantile(x)) } iris2 &lt;- iris %&gt;% mutate(across(where(is.numeric),quartiles)) tbl_summary(iris2) #irzvrolnlo table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #irzvrolnlo thead, #irzvrolnlo tbody, #irzvrolnlo tfoot, #irzvrolnlo tr, #irzvrolnlo td, #irzvrolnlo th { border-style: none; } #irzvrolnlo p { margin: 0; padding: 0; } #irzvrolnlo .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #irzvrolnlo .gt_caption { padding-top: 4px; padding-bottom: 4px; } #irzvrolnlo .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #irzvrolnlo .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #irzvrolnlo .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #irzvrolnlo .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #irzvrolnlo .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #irzvrolnlo .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #irzvrolnlo .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #irzvrolnlo .gt_column_spanner_outer:first-child { padding-left: 0; } #irzvrolnlo .gt_column_spanner_outer:last-child { padding-right: 0; } #irzvrolnlo .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #irzvrolnlo .gt_spanner_row { border-bottom-style: hidden; } #irzvrolnlo .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #irzvrolnlo .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #irzvrolnlo .gt_from_md > :first-child { margin-top: 0; } #irzvrolnlo .gt_from_md > :last-child { margin-bottom: 0; } #irzvrolnlo .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #irzvrolnlo .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #irzvrolnlo .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #irzvrolnlo .gt_row_group_first td { border-top-width: 2px; } #irzvrolnlo .gt_row_group_first th { border-top-width: 2px; } #irzvrolnlo .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #irzvrolnlo .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #irzvrolnlo .gt_first_summary_row.thick { border-top-width: 2px; } #irzvrolnlo .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #irzvrolnlo .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #irzvrolnlo .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #irzvrolnlo .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #irzvrolnlo .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #irzvrolnlo .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #irzvrolnlo .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #irzvrolnlo .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #irzvrolnlo .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #irzvrolnlo .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #irzvrolnlo .gt_left { text-align: left; } #irzvrolnlo .gt_center { text-align: center; } #irzvrolnlo .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #irzvrolnlo .gt_font_normal { font-weight: normal; } #irzvrolnlo .gt_font_bold { font-weight: bold; } #irzvrolnlo .gt_font_italic { font-style: italic; } #irzvrolnlo .gt_super { font-size: 65%; } #irzvrolnlo .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #irzvrolnlo .gt_asterisk { font-size: 100%; vertical-align: 0; } #irzvrolnlo .gt_indent_1 { text-indent: 5px; } #irzvrolnlo .gt_indent_2 { text-indent: 10px; } #irzvrolnlo .gt_indent_3 { text-indent: 15px; } #irzvrolnlo .gt_indent_4 { text-indent: 20px; } #irzvrolnlo .gt_indent_5 { text-indent: 25px; } Characteristic N = 1501 Sepal.Length     (-1.86,-0.898] 40 (27%)     (-0.898,-0.0523] 39 (26%)     (-0.0523,0.672] 35 (23%)     (0.672,2.48] 35 (23%)     Unknown 1 Sepal.Width     (-2.43,-0.59] 46 (31%)     (-0.59,-0.132] 36 (24%)     (-0.132,0.557] 30 (20%)     (0.557,3.08] 37 (25%)     Unknown 1 Petal.Length     (-1.56,-1.22] 43 (29%)     (-1.22,0.335] 31 (21%)     (0.335,0.76] 41 (28%)     (0.76,1.78] 34 (23%)     Unknown 1 Petal.Width     (-1.44,-1.18] 36 (25%)     (-1.18,0.132] 37 (26%)     (0.132,0.788] 38 (26%)     (0.788,1.71] 34 (23%)     Unknown 5 Species     setosa 50 (33%)     versicolor 50 (33%)     virginica 50 (33%) 1 n (%) 7.4 Chargement "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
