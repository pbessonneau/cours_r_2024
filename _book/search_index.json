[["graphiques-et-ggplot.html", "Chapter 6 Graphiques et ggplot 6.1 Les graphiques de base 6.2 le tidyverse et ggplot 6.3 Liens", " Chapter 6 Graphiques et ggplot Les graphiques sont une composante de R qui est en partie à l’origine de son succès car on peut de très beaux et ce depuis la création de R. 6.1 Les graphiques de base Certaines sont très simples d’autres un peu plus compliquées. Nous verrons dans un premier temps les graphiques de base c’est-à-dire qui ne nécessitent pas de charger un package. 6.1.1 Pour les graphiques de chiffres Les premières fonctions présentées sont les plus usuelles comme les histogrammes. hist(patient$poids) Ce n’est pas très esthétique. Il y a des arguments aux fonctions qui permettent d’améliorer les choses. Déjà changer les noms des axes X et y, notamment se débarasser de Frequency qui est un faux ami en français. hist(patient$poids,xlab=&quot;Poids&quot;,ylab=&quot;Effectifs&quot;) Ensuite le titre : hist(patient$poids,xlab=&quot;Poids&quot;,ylab=&quot;Effectifs&quot;,main=&quot;Poids des patients&quot;) Pour la couleur, c’est un peu plus compliqué. En effet il y a simple des couleurs qui répondent à leurs mots en anglais, la liste est là. Mais les couleurs correspondent au codage web des couleurs qui sont en fait des hexadécimaux. Si vous voulez personnaliser plus les couleurs, je vous conseille le paquet RColorBrewer qui possède de jolis (et intelligents) assortiments de couleurs et de la lecture hist(patient$poids,xlab=&quot;Poids&quot;,ylab=&quot;Effectifs&quot;,main=&quot;Poids des patients&quot;,col=&quot;lightblue&quot;) Ensuite il y a les boxplots ou boîtes à moustache pour les variables continues. boxplot(patient$poids) De même on arrange un peu : boxplot(patient$poids,ylab=&quot;Poids&quot;,main=&quot;Poids des patients&quot;) Pour les boxplots on peut faire un peu mieux, par exemple pour segmenter par type de pathologies. On passe la data.frame patient et on précise le nom de la variable qualitative qui doit “séparer” les tracés. boxplot(poids ~ CIM2, data = patient,ylab=&quot;Poids&quot;,main=&quot;Poids des patients en fonction du CIM2&quot;) Le premier argument doit vous paraître un peu abstrait. En fait c’est une formule sous R. C’est l’équivalent de “patient=CIM2”. A gauche du ~ on place la variable à expliquer et à droite la ou les variables explicatives. Ici on en a une de chaque côté. Le graphique le plus simple serait le scatterplot. On aurait pu commencer par lui : Cette fois on a deux arguments qui sont la variable numérique des x en premier et la variable numérique des y en second. plot(patient$poids,patient$dureeopmin) plot(patient$poids,patient$dureeopmin,xlab=&quot;Poids&quot;,ylab=&quot;Durée opération en minutes&quot;) Qui aurait pu s’écrire : plot(dureeopmin ~ poids,data=patient,xlab=&quot;Poids&quot;,ylab=&quot;Durée opération en minutes&quot;) Si on veut tracer une ligne pour la régression linéaire, il faut faire appel à la fonction lm qui calcule la régression et R se charge du reste. coefficients &lt;- lm(dureeopmin ~ poids,data=patient) plot(patient$poids,patient$dureeopmin,xlab=&quot;Poids&quot;,ylab=&quot;Durée opération en minutes&quot;) abline(coefficients) On voit ici que j’ai appellé abline après le plot. En effet, il est nécessaire de faire un plot, un hist ou une boxplot avant pour que R initialise le graphique notamment le calcul des coordonnées maximales et minimales. D’ailleurs on peut les spécifier nous mêmes : coefficients &lt;- lm(dureeopmin~poids,data=patient) plot(patient$poids,patient$dureeopmin,xlab=&quot;Poids&quot;,ylab=&quot;Durée opération en minutes&quot;, xlim=c(0,150),ylim=c(0,600),type=&quot;n&quot;) abline(coefficients) text(patient$poids,patient$dureeopmin,patient$UID) Pour sauvegarder un graphique, on doit le faire avant d’appeler la fonction principale et refermer le fichier avec la commande dev.off: La dernière fonction à connaître pour les graphiques de base est le barplot. Il s’agit de représenter des tableaux de contingence, le plus simple étant à une dimension : tableau &lt;- table(patient$sexe) barplot(tableau, main = &quot;sexe&quot;, ylab = &quot;Effectifs&quot;) On peut lui passer un argument à deux dimensions mais la table devient tout de suite difficile à lire. tableau &lt;- table(patient$CIM2,patient$sexe) barplot(tableau, main = &quot;CIM2&quot;, ylab = &quot;Effectifs&quot;) 6.2 le tidyverse et ggplot Vous pourrez comme précédemment entendre parler des graphiques de base de même que des graphiques lattice mais le choucou du tidyverse c’est ggplot2. C’est un éco-système de packages qui permet de faire la plupart des graphiques plus simplement et qui est basé sur le paquet gplot2. Un livre gratuit lui est consacré là et une page en français là On va reprendre notre grammaire. Il faut saisir que ggplot2 fonctionne par couche. Sur une base, vous additionner des couches qui apporte la personnalisation des graphiques. 6.2.1 La base Au tout départ, il faut lui passer une data.frame, c’est le passage obligé. ggplot(patient) Ensuite on précise les variables de travail. Pour l’histogramme, on en a qu’une : ggplot(patient,aes(poids)) Vous pouvez constater, que le logiciel a calculé et positionner les légendes pour créer un graphique avec poids comme variable des abscisses (horizontal). On personnalise en demandant un graphique de type histogramme. En additionnant littéralement: ggplot(patient,aes(poids))+geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Pour modifier les limtes du graphiques, on rajoute : ggplot(patient,aes(poids))+geom_histogram()+ scale_x_continuous(limits = c(0,150)) + scale_y_continuous(limits = c(0,20)) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 4 rows containing missing values (`geom_bar()`). Si on veut modifier le nombre de barres verticales (la précision de l’histogramme), on précise l’option dans la couche de l’histogramme : ggplot(patient,aes(poids))+geom_histogram(bins=10)+ scale_x_continuous(limits = c(0,150)) ## Warning: Removed 2 rows containing missing values (`geom_bar()`). Pour les titres, c’est pareil, on ajoute des couches : ggplot(patient,aes(poids))+geom_histogram()+ scale_x_continuous(limits = c(0,150)) + ggtitle(&quot;Poids des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Effectifs&quot;) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 2 rows containing missing values (`geom_bar()`). On peut ajouter des propriétés esthétiques comme la couleur, par exemple : ggplot(patient,aes(poids))+geom_histogram(fill =&quot;lightblue&quot;, colour = &quot;black&quot;)+ scale_x_continuous(limits = c(0,150)) + ggtitle(&quot;Poids des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Effectifs&quot;) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 2 rows containing missing values (`geom_bar()`). Là où ggplot2 sort du lot, c’est sa capacité à segmenter et à représenter avec une bonne grammaire graphique ggplot(patient,aes(poids,fill=sexe))+geom_histogram(color=&quot;black&quot;)+ scale_x_continuous(limits = c(0,150)) + ggtitle(&quot;Poids des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Effectifs&quot;) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 4 rows containing missing values (`geom_bar()`). On a l’ajout de couleurs ou alors deux graphiques avec des unités bien choisies: ggplot(patient,aes(poids,fill=sexe))+geom_histogram(color=&quot;black&quot;)+ scale_x_continuous(limits = c(0,150)) + ggtitle(&quot;Poids des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Effectifs&quot;) + facet_grid(sexe ~ .) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 4 rows containing missing values (`geom_bar()`). On a de nouveau une formule. Cette fois, c’est à gauche du ~ les lignes et à droite les colonnes : ggplot(patient,aes(poids))+geom_histogram(color=&quot;black&quot;)+ scale_x_continuous(limits = c(0,150)) + ggtitle(&quot;Poids des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Effectifs&quot;) + facet_grid(sexe ~ Hopital) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 8 rows containing missing values (`geom_bar()`). On peut vouloir calculer la densité et non les effectifs dans ce cas : ggplot(patient,aes(poids))+geom_histogram(aes(y = ..density..),color=&quot;black&quot;)+ scale_x_continuous(limits = c(0,150)) + ggtitle(&quot;Poids des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Densité&quot;) + facet_grid(sexe ~ Hopital) ## Warning: The dot-dot notation (`..density..`) was deprecated in ggplot2 3.4.0. ## ℹ Please use `after_stat(density)` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 8 rows containing missing values (`geom_bar()`). 6.2.2 Les autres graphiques Le boxplot : ggplot(patient,aes(x=poids,fill=sexe))+geom_boxplot()+ ggtitle(&quot;Poids des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Densité&quot;) + facet_grid(Hopital ~ .) ggplot(patient,aes(x=sexe,y=poids))+geom_boxplot()+ ggtitle(&quot;Poids des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Densité&quot;) + facet_grid(Hopital ~ .) ggplot(patient,aes(poids))+geom_boxplot()+ ggtitle(&quot;Poids des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Densité&quot;) + facet_grid(sexe ~ Hopital) D’où des graphiques en scatterplot comme : ggplot(patient,aes(x=poids,y=dureeopmin))+geom_point(aes(col=sexe))+ ggtitle(&quot;Caractéristiques des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Durée de l&#39;opération en minutes&quot;) ou en rajoutant plein de trucs : ggplot(patient,aes(x=poids,y=dureeopmin))+geom_point(aes(col=sexe))+ ggtitle(&quot;Caractéristiques des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Durée de l&#39;opération en minutes&quot;) + facet_grid(CIM2 ~ Hopital) Si on veut ajouter une variable de gravité inversée par rapport à la variable CIM2, avec 1 l’opération la plus grave et 4 l’opération bénigne: patient$Gravité &lt;- LETTERS[5 - patient$CIM2] ggplot(patient,aes(x=poids,y=dureeopmin))+geom_point(aes(col=sexe))+ ggtitle(&quot;Caractéristiques des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Durée de l&#39;opération en minutes&quot;) + facet_grid(Gravité ~ Hopital) Pour rajouter une droite de régression : ggplot(patient,aes(x=poids,y=dureeopmin))+geom_point(aes(col=sexe))+ geom_smooth(method=&quot;lm&quot;) + ggtitle(&quot;Caractéristiques des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Durée de l&#39;opération en minutes&quot;) + facet_grid(CIM2 ~ Hopital) ## `geom_smooth()` using formula = &#39;y ~ x&#39; Des courbes de tendances : ggplot(patient,aes(x=poids,y=dureeopmin))+geom_point(aes(col=sexe))+ geom_smooth() + ggtitle(&quot;Caractéristiques des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Durée de l&#39;opération en minutes&quot;) + facet_grid(CIM2 ~ Hopital) ## `geom_smooth()` using method = &#39;loess&#39; and formula = &#39;y ~ x&#39; Sans l’intervalle de confiance : ggplot(patient,aes(x=vitaux,y=totalechelle))+geom_point(aes(col=sexe))+ geom_smooth(se=FALSE) + ggtitle(&quot;Caractéristiques des patients&quot;) + xlab(&quot;Poids&quot;) + ylab(&quot;Durée de l&#39;opération en minutes&quot;) + facet_grid(CIM2 ~ Hopital) ## `geom_smooth()` using method = &#39;loess&#39; and formula = &#39;y ~ x&#39; ## Warning: Removed 24 rows containing non-finite values (`stat_smooth()`). ## Warning: Removed 24 rows containing missing values (`geom_point()`). Avec l’intervalle de confiance et la droite de régression : ggplot(patient,aes(x=dureeopmin,y=totalechelle))+geom_point(aes(col=sexe))+ geom_smooth(method=&quot;lm&quot;,se=FALSE) + ggtitle(&quot;Total des échelles de douleur et durée opération&quot;) + xlab(&quot;Durée de l&#39;opération en minutes&quot;) + ylab(&quot;Total des échelles de douleur&quot;) + facet_grid(CIM2 ~ Hopital) ## `geom_smooth()` using formula = &#39;y ~ x&#39; ## Warning: Removed 24 rows containing non-finite values (`stat_smooth()`). ## Warning: Removed 24 rows containing missing values (`geom_point()`). Pour ajouter des étiquettes, il existe la librairie ggrepel qui permet de faire en sorte que la superposition des étiquettes soit minimale : ggplot(patient,aes(x=dureeopmin,y=totalechelle,label=UID))+geom_point(aes(col=sexe))+ geom_smooth(method=&quot;lm&quot;,se=FALSE) + geom_text_repel() + ggtitle(&quot;Total des échelles de douleur et durée opération&quot;) + xlab(&quot;Durée de l&#39;opération en minutes&quot;) + ylab(&quot;Total des échelles de douleur&quot;) Evidemment toutes les étiquettes ne sont pas dessinés car il y a trop d’individus mais cela permet de repérer les individus atypiques. 6.2.3 Tableaux de contingences Pour les tableaux de fréquences, on peut faire très simple : ggplot(patient,aes(sexe))+geom_bar() ggplot(patient,aes(sexe))+geom_bar()+ facet_grid(.~Hopital) Là où ggplot2 commence à devenir compliqué, c’est que geom_bar ne va pas marcher car il faut lui fournir la data.frame avec les statistiques en ligne. Soit : ## Le chargement a nécessité le package : reshape2 ## ## Attachement du package : &#39;reshape2&#39; ## L&#39;objet suivant est masqué depuis &#39;package:tidyr&#39;: ## ## smiths ## sexe CIM2 effectif ## 1 Feminin 1 20 ## 2 Masculin 1 30 ## 3 Feminin 2 26 ## 4 Masculin 2 24 ## 5 Feminin 3 28 ## 6 Masculin 3 22 ## 7 Feminin 4 41 ## 8 Masculin 4 9 Pour faire ce tableau, il faut faire appel au package reshape2. require(reshape2) tableau &lt;- table(patient$sexe,patient$CIM2) tableau ## ## 1 2 3 4 ## Feminin 20 26 28 41 ## Masculin 30 24 22 9 De ce tableau on passe au long en une commande : long &lt;- melt(tableau,varnames = c(&quot;sexe&quot;,&quot;CIM2&quot;),value.name = &quot;value&quot;) Il faut spécifier le nom à donner aux deux variables et spécifier le résultat du croisement des deux variables qui est le nombre d’observations c’est-à-dire le contenu de chaque cellule de tableau. ggplot(long,aes(x=sexe,y=value,fill=CIM2))+geom_bar(position = &quot;stack&quot;,stat=&quot;identity&quot;) Je dois faire de CIM2 une variable qualitative explicitement. En effet, CIM2 est numérique (un entier de 1 à 4). Aussi quand je donne le CIM2 à l’argument fill= il ne sait pas s’il s’agit de la couleur (qui peut être un code numérique aussi) ou d’une variable qualitative. ggplot(long,aes(x=sexe,y=value,fill=factor(CIM2)))+geom_bar(position = &quot;dodge&quot;,stat=&quot;identity&quot;) D’où le graphique : tableau &lt;- table(patient$Hopital,patient$sexe,patient$CIM2) long &lt;- melt(tableau,varnames = c(&quot;Hopital&quot;,&quot;sexe&quot;,&quot;CIM2&quot;),value.name = &quot;effectif&quot;) ggplot(long,aes(x=CIM2,y=effectif,fill=sexe))+ geom_bar(position = &quot;dodge&quot;,stat=&quot;identity&quot;)+ facet_grid(Hopital ~ . ) Pour sauvegarder un graphique ggplot2, la syntaxe est différente et surtout on l’appelle une fois que le graphique est terminé, c’est-à-dire en dernier : Et ainsi de suite… 6.2.4 Les thèmes Les graphiques de ggplot peuvent changer selon des thèmes qui définissent des styles de graphique différents. Celui à retenir est minimal qui fait que le graphique est épuré au maximum : tableau &lt;- table(patient$Hopital,patient$sexe,patient$CIM2) long &lt;- melt(tableau,varnames = c(&quot;Hopital&quot;,&quot;sexe&quot;,&quot;CIM2&quot;),value.name = &quot;effectif&quot;) ggplot(long,aes(x=CIM2,y=effectif,fill=sexe))+ geom_bar(position = &quot;dodge&quot;,stat=&quot;identity&quot;)+ facet_grid(Hopital ~ . ) + theme_minimal() Il y a 10 à 20 thèmes par défaut et il y a des variantes supplémentaires et de quoi personnaliser ses propres thèmes dans le package ggthemes. 6.3 Liens Il y a de nombreuses galleries sur le web avec toutes les possiblités offertes par les graphiques de base comme les graphiques avec ggplot2. r-graph-gallery r-chart … On peut en parcourir ensemble… tableau &lt;- dcast(patient, UID + sexe ~ Hopital, value.var = &quot;nbechelle&quot;) tableau$poids &lt;- ifelse(!is.na(tableau$A),tableau$A,tableau$B) ggplot(tableau, aes(x=nbechelle) ) + geom_density( aes(x = A, y = ..density..), fill=&quot;#69b3a2&quot; ) + geom_label(aes(x=90, y=0.01, label=&quot;Hopital A&quot;), color=&quot;#69b3a2&quot;) + geom_density( aes(x = B, y = -..density..), fill= &quot;#404080&quot;) + geom_label(aes(x=90,y=-0.01, label=&quot;Hopital B&quot;), color=&quot;#404080&quot;) ## Warning: Removed 100 rows containing non-finite values (`stat_density()`). ## Removed 100 rows containing non-finite values (`stat_density()`). "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
